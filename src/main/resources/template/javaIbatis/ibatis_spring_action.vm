package $!{base_package}.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;

$!{base_package}.$!{pojo_package}.$!{tableModel.tableName}Mapper;
$!{base_package}.$!{pojo_package}.$!{tableModel.tableName};
import com..wireless.platform.appmis.util.JSONUtil;
import com..wireless.platform.appmis.util.PageController;

@Controller
public class $!{tableModel.tableName}Controller extends AbstractController {
	private static final Log log = LogFactory.getLog($!{tableModel.tableName}Controller.class);
    @Autowired
    private $!{tableModel.tableName}Mapper $!{stringUtil.uncapitalize($!{tableModel.tableName})}Mapper;
	@RequestMapping("/$!{stringUtil.uncapitalize($!{tableModel.tableName})}List")
    public String $!{stringUtil.uncapitalize($!{tableModel.tableName})}List(Integer pageNo, $!{tableModel.tableName} $!{stringUtil.uncapitalize($!{tableModel.tableName})}, HttpServletRequest request, HttpServletResponse response,
            ModelMap model) {
        Map<String, Object> param = new HashMap<String, Object>();
        param.put("$!{stringUtil.uncapitalize($!{tableModel.tableName})}", $!{stringUtil.uncapitalize($!{tableModel.tableName})});

        int totalCount = $!{stringUtil.uncapitalize($!{tableModel.tableName})}Mapper.getCount(param);
        pageNo = pageNo == null ? 1 : pageNo;
        PageController page = new PageController(totalCount, pageNo);
        param.put("start", page.getPageStartRow());
        param.put("size", PAGE_SIZE);

        List<$!{tableModel.tableName}> $!{stringUtil.uncapitalize($!{tableModel.tableName})}s = $!{stringUtil.uncapitalize($!{tableModel.tableName})}Mapper.selectList(param);
        model.addAttribute("json", JSONUtil.fromArray($!{stringUtil.uncapitalize($!{tableModel.tableName})}s).toString());
        model.addAttribute("page", page);
        model.addAttribute("$!{stringUtil.uncapitalize($!{tableModel.tableName})}", $!{stringUtil.uncapitalize($!{tableModel.tableName})});
        return "$!{stringUtil.uncapitalize($!{tableModel.tableName})}/$!{stringUtil.uncapitalize($!{tableModel.tableName})}-list";
    }

    @RequestMapping("/$!{stringUtil.uncapitalize($!{tableModel.tableName})}Edit")
    public String $!{stringUtil.uncapitalize($!{tableModel.tableName})}Edit($!{tableModel.tableName} $!{stringUtil.uncapitalize($!{tableModel.tableName})}, HttpServletRequest request, HttpServletResponse response, ModelMap model) {
        System.out.println(123);
        if ($!{stringUtil.uncapitalize($!{tableModel.tableName})}.get$!{stringUtil.capitalize($!{tableModel.pk})}() != null) {
            $!{stringUtil.uncapitalize($!{tableModel.tableName})} = $!{stringUtil.uncapitalize($!{tableModel.tableName})}Mapper.selectByPrimaryKey($!{stringUtil.uncapitalize($!{tableModel.tableName})}.get$!{stringUtil.capitalize($!{tableModel.pk})}());
            model.addAttribute("$!{stringUtil.uncapitalize($!{tableModel.tableName})}", $!{stringUtil.uncapitalize($!{tableModel.tableName})});
        }
        return "$!{stringUtil.uncapitalize($!{tableModel.tableName})}/$!{stringUtil.uncapitalize($!{tableModel.tableName})}-edit";
    }

    @RequestMapping("/$!{stringUtil.uncapitalize($!{tableModel.tableName})}Save")
    public String $!{stringUtil.uncapitalize($!{tableModel.tableName})}Save($!{tableModel.tableName} $!{stringUtil.uncapitalize($!{tableModel.tableName})}, HttpServletRequest request, HttpServletResponse response, ModelMap model) {
        if ($!{stringUtil.uncapitalize($!{tableModel.tableName})}.get$!{stringUtil.capitalize($!{tableModel.pk})}() == null) {
            $!{stringUtil.uncapitalize($!{tableModel.tableName})}Mapper.insert($!{stringUtil.uncapitalize($!{tableModel.tableName})});
        } else {
            $!{stringUtil.uncapitalize($!{tableModel.tableName})}Mapper.updateByPrimaryKey($!{stringUtil.uncapitalize($!{tableModel.tableName})});
        }
        return "redirect:/$!{stringUtil.uncapitalize($!{tableModel.tableName})}List";
    }

    @RequestMapping("/$!{stringUtil.uncapitalize($!{tableModel.tableName})}Del")
    public String $!{stringUtil.uncapitalize($!{tableModel.tableName})}Del($!{tableModel.tableName} $!{stringUtil.uncapitalize($!{tableModel.tableName})}, HttpServletRequest request, HttpServletResponse response, ModelMap model) {
        $!{stringUtil.uncapitalize($!{tableModel.tableName})}Mapper.deleteByPrimaryKey($!{stringUtil.uncapitalize($!{tableModel.tableName})}.get$!{stringUtil.capitalize($!{tableModel.pk})}());
        return "redirect:/$!{stringUtil.uncapitalize($!{tableModel.tableName})}List";
    }
}
